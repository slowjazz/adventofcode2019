inp = """
3,225,1,225,6,6,1100,1,238,225,104,0,1002,148,28,224,1001,224,-672,224,4,224,1002,223,8,223,101,3,224,224,1,224,223,223,1102,8,21,225,1102,13,10,225,1102,21,10,225,1102,6,14,225,1102,94,17,225,1,40,173,224,1001,224,-90,224,4,224,102,8,223,223,1001,224,4,224,1,224,223,223,2,35,44,224,101,-80,224,224,4,224,102,8,223,223,101,6,224,224,1,223,224,223,1101,26,94,224,101,-120,224,224,4,224,102,8,223,223,1001,224,7,224,1,224,223,223,1001,52,70,224,101,-87,224,224,4,224,1002,223,8,223,1001,224,2,224,1,223,224,223,1101,16,92,225,1101,59,24,225,102,83,48,224,101,-1162,224,224,4,224,102,8,223,223,101,4,224,224,1,223,224,223,1101,80,10,225,101,5,143,224,1001,224,-21,224,4,224,1002,223,8,223,1001,224,6,224,1,223,224,223,1102,94,67,224,101,-6298,224,224,4,224,102,8,223,223,1001,224,3,224,1,224,223,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,108,677,677,224,102,2,223,223,1005,224,329,101,1,223,223,1107,677,226,224,102,2,223,223,1006,224,344,101,1,223,223,1107,226,226,224,102,2,223,223,1006,224,359,101,1,223,223,1108,677,677,224,102,2,223,223,1005,224,374,101,1,223,223,8,677,226,224,1002,223,2,223,1005,224,389,101,1,223,223,108,226,677,224,1002,223,2,223,1006,224,404,1001,223,1,223,107,677,677,224,102,2,223,223,1006,224,419,101,1,223,223,1007,226,226,224,102,2,223,223,1005,224,434,101,1,223,223,1007,677,677,224,102,2,223,223,1005,224,449,1001,223,1,223,8,677,677,224,1002,223,2,223,1006,224,464,101,1,223,223,1108,677,226,224,1002,223,2,223,1005,224,479,101,1,223,223,7,677,226,224,1002,223,2,223,1005,224,494,101,1,223,223,1008,677,677,224,1002,223,2,223,1006,224,509,1001,223,1,223,1007,226,677,224,1002,223,2,223,1006,224,524,1001,223,1,223,107,226,226,224,1002,223,2,223,1006,224,539,1001,223,1,223,1107,226,677,224,102,2,223,223,1005,224,554,101,1,223,223,1108,226,677,224,102,2,223,223,1006,224,569,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,584,1001,223,1,223,7,226,226,224,1002,223,2,223,1006,224,599,101,1,223,223,8,226,677,224,102,2,223,223,1005,224,614,101,1,223,223,7,226,677,224,1002,223,2,223,1005,224,629,101,1,223,223,1008,226,677,224,1002,223,2,223,1006,224,644,101,1,223,223,107,226,677,224,1002,223,2,223,1005,224,659,1001,223,1,223,1008,226,226,224,1002,223,2,223,1006,224,674,1001,223,1,223,4,223,99,226
"""
# inp = """
# 3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
# 1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
# 999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99"""
inp = [int(x) for x in inp.split(',')]

i = 0

def process(inp, code, arg1, arg2, arg3):
    print('process: ',i, inp[i:i+20])
    pntr = None
    length = 0
    if code == 1:
        inp[arg3] = arg1 + arg2
        length = 3
    elif code == 2:
        inp[arg3] = arg1 * arg2
        length = 3

    elif code == 3:
        inp[arg1] = 5
        length = 1
    
    elif code == 4: 
        print('output: ', inp[arg1])
        length = 1
    elif code == 5:
        if arg1 != 0:
            pntr = arg2
        else:
            length = 2
    elif code == 6:
        if arg1 == 0:
            pntr = arg2
        else: length  = 2
    elif code == 7:
        if arg1 < arg2:
            inp[arg3] = 1
        else:
            inp[arg3] = 0
        length = 3
    else:
        if arg1 == arg2:
            inp[arg3] = 1
        else:
            inp[arg3] = 0
        length = 3
        
    return length, pntr

params = {1:3, 2:3, 3:1, 4:1, 5:2, 6:2, 7:3, 8:3}
    
while(i<len(inp)):
    length = 0
    if inp[i] == 99: 
        print('exit')
        exit()
    print(i)
    if inp[i] < 9:
        if inp[i] <3:
            length, pntr  = process(inp, inp[i], inp[inp[i+1]], inp[inp[i+2]], inp[i+3])
        elif inp[i]<5: # =3 or 4
            length, pntr  = process(inp, inp[i], inp[i+1], None, None)
        elif inp[i] <7: # 5,6
            length, pntr  = process(inp, inp[i], inp[i+1], inp[i+2], None)
        else:
            length, pntr  = process(inp, inp[i], inp[inp[i+1]], inp[inp[i+2]], inp[i+3])
    else:
        print(i, 'code: ',inp[i])
        print(inp[i:i+20])
        code = int(str(inp[i])[-2:])
        modes = [int(x) for x in str(inp[i])[::-1][2:]] + [0]*(params[code]-len(str(inp[i]))+2)
        args = []
        print(code, modes)
        for k, m in enumerate(modes):
            if m == 1:
                args.append(inp[i+k+1])
            else: 
                args.append(inp[inp[i+k+1]])
        print(args)
        if code<3:
            length, pntr = process(inp, code, args[0], args[1], inp[i+3] )
        elif code <5: 
            length, pntr = process(inp, code, args[0], None, None)
        elif code<7:
            length, pntr  = process(inp, code, args[0], args[1], None)
        else:
            length, pntr = process(inp, code, args[0], args[1], inp[i+3] )
        print('done: ', inp[:20])
    if pntr:
        i = pntr
    else:
        i +=length +1

        